{"version":3,"file":"lossless-json.js","sources":["../esm/config.js","../esm/utils.js","../esm/LosslessNumber.js","../esm/numberParsers.js","../esm/revive.js","../esm/parse.js","../esm/stringify.js","../esm/reviveDate.js"],"sourcesContent":["/**\n * Get and/or set configuration options\n * @deprecated There is no config anymore\n */ // eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function config(options) {\n  // Backward compatibility warning for v1.x\n  throw new Error('config is deprecated, support for circularRefs is removed from the library. ' + 'If you encounter circular references in your data structures, ' + 'please rethink your datastructures: ' + 'better prevent circular references in the first place.');\n}\n//# sourceMappingURL=config.js.map","/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value) {\n  return INTEGER_REGEX.test(value);\n}\nvar INTEGER_REGEX = /^-?[0-9]+$/;\n\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\nexport function isNumber(value) {\n  return NUMBER_REGEX.test(value);\n}\nvar NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n\n/**\n * Test whether a string can be safely represented with a number\n * without information.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\nexport function isSafeNumber(value, config) {\n  var num = parseFloat(value);\n  var str = String(num);\n  var v = extractSignificantDigits(value);\n  var s = extractSignificantDigits(str);\n  if (v === s) {\n    return true;\n  }\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    var requiredDigits = 14;\n    if (!isInteger(value) && s.length >= requiredDigits && v.startsWith(s.substring(0, requiredDigits))) {\n      return true;\n    }\n  }\n  return false;\n}\nexport var UnsafeNumberReason = /*#__PURE__*/function (UnsafeNumberReason) {\n  UnsafeNumberReason[\"underflow\"] = \"underflow\";\n  UnsafeNumberReason[\"overflow\"] = \"overflow\";\n  UnsafeNumberReason[\"truncate_integer\"] = \"truncate_integer\";\n  UnsafeNumberReason[\"truncate_float\"] = \"truncate_float\";\n  return UnsafeNumberReason;\n}({});\n\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\nexport function getUnsafeNumberReason(value) {\n  if (isSafeNumber(value, {\n    approx: false\n  })) {\n    return undefined;\n  }\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer;\n  }\n  var num = parseFloat(value);\n  if (!isFinite(num)) {\n    return UnsafeNumberReason.overflow;\n  }\n  if (num === 0) {\n    return UnsafeNumberReason.underflow;\n  }\n  return UnsafeNumberReason.truncate_float;\n}\n\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\nexport function toSafeNumberOrThrow(value, config) {\n  var number = parseFloat(value);\n  var unsafeReason = getUnsafeNumberReason(value);\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float : unsafeReason) {\n    var unsafeReasonText = unsafeReason.replace(/_\\w+$/, '');\n    throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(value, \"' would \").concat(unsafeReasonText, \" and become \").concat(number));\n  }\n  return number;\n}\n\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/\nexport function extractSignificantDigits(value) {\n  return value\n  // from \"-0.250e+30\" to \"-0.250\"\n  .replace(EXPONENTIAL_PART_REGEX, '')\n\n  // from \"-0.250\" to \"-0250\"\n  .replace(DOT_REGEX, '')\n\n  // from \"-0250\" to \"-025\"\n  .replace(TRAILING_ZEROS_REGEX, '')\n\n  // from \"-025\" to \"25\"\n  .replace(LEADING_MINUS_AND_ZEROS_REGEX, '');\n}\nvar EXPONENTIAL_PART_REGEX = /[eE][+-]?\\d+$/;\nvar LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/;\nvar DOT_REGEX = /\\./;\nvar TRAILING_ZEROS_REGEX = /0+$/;\n//# sourceMappingURL=utils.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { extractSignificantDigits, getUnsafeNumberReason, isInteger, isNumber, UnsafeNumberReason } from './utils.js';\n\n/**\n * A lossless number. Stores its numeric value as string\n */\nexport var LosslessNumber = /*#__PURE__*/function () {\n  function LosslessNumber(value) {\n    _classCallCheck(this, LosslessNumber);\n    // numeric value as string\n    // type information\n    _defineProperty(this, \"isLosslessNumber\", true);\n    if (!isNumber(value)) {\n      throw new Error('Invalid number (value: \"' + value + '\")');\n    }\n    this.value = value;\n  }\n\n  /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */\n  _createClass(LosslessNumber, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      var unsafeReason = getUnsafeNumberReason(this.value);\n\n      // safe or truncate_float\n      if (unsafeReason === undefined || unsafeReason === UnsafeNumberReason.truncate_float) {\n        return parseFloat(this.value);\n      }\n\n      // truncate_integer\n      if (isInteger(this.value)) {\n        return BigInt(this.value);\n      }\n\n      // overflow or underflow\n      throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(this.value, \"' would \").concat(unsafeReason, \" and become \").concat(parseFloat(this.value)));\n    }\n\n    /**\n     * Get the value of the LosslessNumber as string.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value;\n    }\n\n    // Note: we do NOT implement a .toJSON() method, and you should not implement\n    // or use that, it cannot safely turn the numeric value in the string into\n    // stringified JSON since it has to be parsed into a number first.\n  }]);\n  return LosslessNumber;\n}();\n\n/**\n * Test whether a value is a LosslessNumber\n */\nexport function isLosslessNumber(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && _typeof(value) === 'object' && value.isLosslessNumber === true || false;\n}\n\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */\nexport function toLosslessNumber(value) {\n  if (extractSignificantDigits(value + '').length > 15) {\n    throw new Error('Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself ' + \"(value: \".concat(value, \")\"));\n  }\n  if (isNaN(value)) {\n    throw new Error('Invalid number: NaN');\n  }\n  if (!isFinite(value)) {\n    throw new Error('Invalid number: ' + value);\n  }\n  return new LosslessNumber(String(value));\n}\n//# sourceMappingURL=LosslessNumber.js.map","import { LosslessNumber } from './LosslessNumber.js';\nimport { isInteger } from './utils.js';\nexport function parseLosslessNumber(value) {\n  return new LosslessNumber(value);\n}\nexport function parseNumberAndBigInt(value) {\n  return isInteger(value) ? BigInt(value) : parseFloat(value);\n}\n//# sourceMappingURL=numberParsers.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport { isLosslessNumber } from './LosslessNumber.js';\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */\nexport function revive(json, reviver) {\n  return reviveValue({\n    '': json\n  }, '', json, reviver);\n}\n\n/**\n * Revive a value\n */\nfunction reviveValue(context, key, value, reviver) {\n  if (Array.isArray(value)) {\n    return reviver.call(context, key, reviveArray(value, reviver));\n  } else if (value && _typeof(value) === 'object' && !isLosslessNumber(value)) {\n    // note the special case for LosslessNumber,\n    // we don't want to iterate over the internals of a LosslessNumber\n    return reviver.call(context, key, reviveObject(value, reviver));\n  } else {\n    return reviver.call(context, key, value);\n  }\n}\n\n/**\n * Revive the properties of an object\n */\nfunction reviveObject(object, reviver) {\n  Object.keys(object).forEach(function (key) {\n    var value = reviveValue(object, key, object[key], reviver);\n    if (value !== undefined) {\n      object[key] = value;\n    } else {\n      delete object[key];\n    }\n  });\n  return object;\n}\n\n/**\n * Revive the properties of an Array\n */\nfunction reviveArray(array, reviver) {\n  for (var i = 0; i < array.length; i++) {\n    array[i] = reviveValue(array, i + '', array[i], reviver);\n  }\n  return array;\n}\n//# sourceMappingURL=revive.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { parseLosslessNumber } from './numberParsers.js';\nimport { revive } from './revive.js';\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [parseNumber=parseLosslessNumber]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */\nexport function parse(text, reviver) {\n  var parseNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : parseLosslessNumber;\n  var i = 0;\n  var value = parseValue();\n  expectValue(value);\n  expectEndOfInput();\n  return reviver ? revive(value, reviver) : value;\n  function parseObject() {\n    if (text.charCodeAt(i) === codeOpeningBrace) {\n      i++;\n      skipWhitespace();\n      var object = {};\n      var initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBrace) {\n        if (!initial) {\n          eatComma();\n          skipWhitespace();\n        } else {\n          initial = false;\n        }\n        var start = i;\n        var key = parseString();\n        if (key === undefined) {\n          throwObjectKeyExpected();\n        }\n        skipWhitespace();\n        eatColon();\n        var _value = parseValue();\n        if (_value === undefined) {\n          throwObjectValueExpected();\n        }\n\n        // TODO: test deep equal instead of strict equal\n        if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(_value, object[key])) {\n          // Note that we could also test `if(key in object) {...}`\n          // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n          throwDuplicateKey(key, start + 1);\n        }\n        object[key] = _value;\n      }\n      if (text.charCodeAt(i) !== codeClosingBrace) {\n        throwObjectKeyOrEndExpected();\n      }\n      i++;\n      return object;\n    }\n  }\n  function parseArray() {\n    if (text.charCodeAt(i) === codeOpeningBracket) {\n      i++;\n      skipWhitespace();\n      var array = [];\n      var initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBracket) {\n        if (!initial) {\n          eatComma();\n        } else {\n          initial = false;\n        }\n        var _value2 = parseValue();\n        expectArrayItem(_value2);\n        array.push(_value2);\n      }\n      if (text.charCodeAt(i) !== codeClosingBracket) {\n        throwArrayItemOrEndExpected();\n      }\n      i++;\n      return array;\n    }\n  }\n  function parseValue() {\n    var _ref, _ref2, _ref3, _ref4, _ref5, _parseString;\n    skipWhitespace();\n    var value = (_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_parseString = parseString()) !== null && _parseString !== void 0 ? _parseString : parseNumeric()) !== null && _ref5 !== void 0 ? _ref5 : parseObject()) !== null && _ref4 !== void 0 ? _ref4 : parseArray()) !== null && _ref3 !== void 0 ? _ref3 : parseKeyword('true', true)) !== null && _ref2 !== void 0 ? _ref2 : parseKeyword('false', false)) !== null && _ref !== void 0 ? _ref : parseKeyword('null', null);\n    skipWhitespace();\n    return value;\n  }\n  function parseKeyword(name, value) {\n    if (text.slice(i, i + name.length) === name) {\n      i += name.length;\n      return value;\n    }\n  }\n  function skipWhitespace() {\n    while (isWhitespace(text.charCodeAt(i))) {\n      i++;\n    }\n  }\n  function parseString() {\n    if (text.charCodeAt(i) === codeDoubleQuote) {\n      i++;\n      var result = '';\n      while (i < text.length && text.charCodeAt(i) !== codeDoubleQuote) {\n        if (text.charCodeAt(i) === codeBackslash) {\n          var char = text[i + 1];\n          var escapeChar = escapeCharacters[char];\n          if (escapeChar !== undefined) {\n            result += escapeChar;\n            i++;\n          } else if (char === 'u') {\n            if (isHex(text.charCodeAt(i + 2)) && isHex(text.charCodeAt(i + 3)) && isHex(text.charCodeAt(i + 4)) && isHex(text.charCodeAt(i + 5))) {\n              result += String.fromCharCode(parseInt(text.slice(i + 2, i + 6), 16));\n              i += 5;\n            } else {\n              throwInvalidUnicodeCharacter(i);\n            }\n          } else {\n            throwInvalidEscapeCharacter(i);\n          }\n        } else {\n          if (isValidStringCharacter(text.charCodeAt(i))) {\n            result += text[i];\n          } else {\n            throwInvalidCharacter(text[i]);\n          }\n        }\n        i++;\n      }\n      expectEndOfString();\n      i++;\n      return result;\n    }\n  }\n  function parseNumeric() {\n    var start = i;\n    if (text.charCodeAt(i) === codeMinus) {\n      i++;\n      expectDigit(start);\n    }\n    if (text.charCodeAt(i) === codeZero) {\n      i++;\n    } else if (isNonZeroDigit(text.charCodeAt(i))) {\n      i++;\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeDot) {\n      i++;\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {\n      i++;\n      if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {\n        i++;\n      }\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (i > start) {\n      return parseNumber(text.slice(start, i));\n    }\n  }\n  function eatComma() {\n    if (text.charCodeAt(i) !== codeComma) {\n      throw new SyntaxError(\"Comma ',' expected after value \".concat(gotAt()));\n    }\n    i++;\n  }\n  function eatColon() {\n    if (text.charCodeAt(i) !== codeColon) {\n      throw new SyntaxError(\"Colon ':' expected after property name \".concat(gotAt()));\n    }\n    i++;\n  }\n  function expectValue(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"JSON value expected \".concat(gotAt()));\n    }\n  }\n  function expectArrayItem(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"Array item expected \".concat(gotAt()));\n    }\n  }\n  function expectEndOfInput() {\n    if (i < text.length) {\n      throw new SyntaxError(\"Expected end of input \".concat(gotAt()));\n    }\n  }\n  function expectDigit(start) {\n    if (!isDigit(text.charCodeAt(i))) {\n      var numSoFar = text.slice(start, i);\n      throw new SyntaxError(\"Invalid number '\".concat(numSoFar, \"', expecting a digit \").concat(gotAt()));\n    }\n  }\n  function expectEndOfString() {\n    if (text.charCodeAt(i) !== codeDoubleQuote) {\n      throw new SyntaxError(\"End of string '\\\"' expected \".concat(gotAt()));\n    }\n  }\n  function throwObjectKeyExpected() {\n    throw new SyntaxError(\"Quoted object key expected \".concat(gotAt()));\n  }\n  function throwDuplicateKey(key, pos) {\n    throw new SyntaxError(\"Duplicate key '\".concat(key, \"' encountered at position \").concat(pos));\n  }\n  function throwObjectKeyOrEndExpected() {\n    throw new SyntaxError(\"Quoted object key or end of object '}' expected \".concat(gotAt()));\n  }\n  function throwArrayItemOrEndExpected() {\n    throw new SyntaxError(\"Array item or end of array ']' expected \".concat(gotAt()));\n  }\n  function throwInvalidCharacter(char) {\n    throw new SyntaxError(\"Invalid character '\".concat(char, \"' \").concat(pos()));\n  }\n  function throwInvalidEscapeCharacter(start) {\n    var chars = text.slice(start, start + 2);\n    throw new SyntaxError(\"Invalid escape character '\".concat(chars, \"' \").concat(pos()));\n  }\n  function throwObjectValueExpected() {\n    throw new SyntaxError(\"Object value expected after ':' \".concat(pos()));\n  }\n  function throwInvalidUnicodeCharacter(start) {\n    var end = start + 2;\n    while (/\\w/.test(text[end])) {\n      end++;\n    }\n    var chars = text.slice(start, end);\n    throw new SyntaxError(\"Invalid unicode character '\".concat(chars, \"' \").concat(pos()));\n  }\n\n  // zero based character position\n  function pos() {\n    return \"at position \".concat(i);\n  }\n  function got() {\n    return i < text.length ? \"but got '\".concat(text[i], \"'\") : 'but reached end of input';\n  }\n  function gotAt() {\n    return got() + ' ' + pos();\n  }\n}\nfunction isWhitespace(code) {\n  return code === codeSpace || code === codeNewline || code === codeTab || code === codeReturn;\n}\nfunction isHex(code) {\n  return code >= codeZero && code <= codeNine || code >= codeUppercaseA && code <= codeUppercaseF || code >= codeLowercaseA && code <= codeLowercaseF;\n}\nfunction isDigit(code) {\n  return code >= codeZero && code <= codeNine;\n}\nfunction isNonZeroDigit(code) {\n  return code >= codeOne && code <= codeNine;\n}\nexport function isValidStringCharacter(code) {\n  return code >= 0x20 && code <= 0x10ffff;\n}\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (item, index) {\n      return isDeepEqual(item, b[index]);\n    });\n  }\n  if (isObject(a) && isObject(b)) {\n    var keys = _toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(a)), _toConsumableArray(Object.keys(b)))));\n    return keys.every(function (key) {\n      return isDeepEqual(a[key], b[key]);\n    });\n  }\n  return false;\n}\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\n\n// map with all escape characters\nvar escapeCharacters = {\n  '\"': '\"',\n  '\\\\': '\\\\',\n  '/': '/',\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t'\n  // note that \\u is handled separately in parseString()\n};\n\nvar codeBackslash = 0x5c; // \"\\\"\nvar codeOpeningBrace = 0x7b; // \"{\"\nvar codeClosingBrace = 0x7d; // \"}\"\nvar codeOpeningBracket = 0x5b; // \"[\"\nvar codeClosingBracket = 0x5d; // \"]\"\nvar codeSpace = 0x20; // \" \"\nvar codeNewline = 0xa; // \"\\n\"\nvar codeTab = 0x9; // \"\\t\"\nvar codeReturn = 0xd; // \"\\r\"\nvar codeDoubleQuote = 0x0022; // \"\nvar codePlus = 0x2b; // \"+\"\nvar codeMinus = 0x2d; // \"-\"\nvar codeZero = 0x30;\nvar codeOne = 0x31;\nvar codeNine = 0x39;\nvar codeComma = 0x2c; // \",\"\nvar codeDot = 0x2e; // \".\" (dot, period)\nvar codeColon = 0x3a; // \":\"\nexport var codeUppercaseA = 0x41; // \"A\"\nexport var codeLowercaseA = 0x61; // \"a\"\nexport var codeUppercaseE = 0x45; // \"E\"\nexport var codeLowercaseE = 0x65; // \"e\"\nexport var codeUppercaseF = 0x46; // \"F\"\nexport var codeLowercaseF = 0x66; // \"f\"\n//# sourceMappingURL=parse.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport { isNumber } from './utils.js';\n\n/**\n * The LosslessJSON.stringify() method converts a JavaScript value to a JSON string,\n * optionally replacing values if a replacer function is specified, or\n * optionally including only the specified properties if a replacer array is specified.\n *\n * @param value\n * The value to convert to a JSON string.\n *\n * @param [replacer]\n * A function that alters the behavior of the stringification process,\n * or an array of String and Number objects that serve as a whitelist for\n * selecting the properties of the value object to be included in the JSON string.\n * If this value is null or not provided, all properties of the object are\n * included in the resulting JSON string.\n *\n * @param [space]\n * A String or Number object that's used to insert white space into the output\n * JSON string for readability purposes. If this is a Number, it indicates the\n * number of space characters to use as white space; this number is capped at 10\n * if it's larger than that. Values less than 1 indicate that no space should be\n * used. If this is a String, the string (or the first 10 characters of the string,\n * if it's longer than that) is used as white space. If this parameter is not\n * provided (or is null), no white space is used.\n *\n * @param [numberStringifiers]\n * An optional list with additional number stringifiers, for example to serialize\n * a BigNumber. The output of the function must be valid stringified JSON.\n * When `undefined` is returned, the property will be deleted from the object.\n * The difference with using a `replacer` is that the output of a `replacer`\n * must be JSON and will be stringified afterwards, whereas the output of the\n * `numberStringifiers` is already stringified JSON.\n *\n * @returns Returns the string representation of the JSON object.\n */\nexport function stringify(value, replacer, space, numberStringifiers) {\n  var resolvedSpace = resolveSpace(space);\n  var replacedValue = typeof replacer === 'function' ? replacer.call({\n    '': value\n  }, '', value) : value;\n  return stringifyValue(replacedValue, '');\n\n  /**\n   * Stringify a value\n   */\n  function stringifyValue(value, indent) {\n    if (Array.isArray(numberStringifiers)) {\n      var stringifier = numberStringifiers.find(function (item) {\n        return item.test(value);\n      });\n      if (stringifier) {\n        var str = stringifier.stringify(value);\n        if (typeof str !== 'string' || !isNumber(str)) {\n          throw new Error('Invalid JSON number: ' + 'output of a number stringifier must be a string containing a JSON number ' + \"(output: \".concat(str, \")\"));\n        }\n        return str;\n      }\n    }\n\n    // boolean, null, number, string, or date\n    if (typeof value === 'boolean' || typeof value === 'number' || typeof value === 'string' || value === null || value instanceof Date || value instanceof Boolean || value instanceof Number || value instanceof String) {\n      return JSON.stringify(value);\n    }\n\n    // lossless number, the secret ingredient :)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (value && value.isLosslessNumber) {\n      return value.toString();\n    }\n\n    // BigInt\n    if (typeof value === 'bigint') {\n      return value.toString();\n    }\n\n    // Array\n    if (Array.isArray(value)) {\n      return stringifyArray(value, indent);\n    }\n\n    // Object (test lastly!)\n    if (value && _typeof(value) === 'object') {\n      return stringifyObject(value, indent);\n    }\n    return undefined;\n  }\n\n  /**\n   * Stringify an array\n   */\n  function stringifyArray(array, indent) {\n    if (array.length === 0) {\n      return '[]';\n    }\n    var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n    var str = resolvedSpace ? '[\\n' : '[';\n    for (var i = 0; i < array.length; i++) {\n      var item = typeof replacer === 'function' ? replacer.call(array, String(i), array[i]) : array[i];\n      if (resolvedSpace) {\n        str += childIndent;\n      }\n      if (typeof item !== 'undefined' && typeof item !== 'function') {\n        str += stringifyValue(item, childIndent);\n      } else {\n        str += 'null';\n      }\n      if (i < array.length - 1) {\n        str += resolvedSpace ? ',\\n' : ',';\n      }\n    }\n    str += resolvedSpace ? '\\n' + indent + ']' : ']';\n    return str;\n  }\n\n  /**\n   * Stringify an object\n   */\n  function stringifyObject(object, indent) {\n    if (typeof object.toJSON === 'function') {\n      return stringify(object.toJSON(), replacer, space, undefined);\n    }\n    var keys = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object);\n    if (keys.length === 0) {\n      return '{}';\n    }\n    var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n    var first = true;\n    var str = resolvedSpace ? '{\\n' : '{';\n    keys.forEach(function (key) {\n      var value = typeof replacer === 'function' ? replacer.call(object, key, object[key]) : object[key];\n      if (includeProperty(key, value)) {\n        if (first) {\n          first = false;\n        } else {\n          str += resolvedSpace ? ',\\n' : ',';\n        }\n        var keyStr = JSON.stringify(key);\n        str += resolvedSpace ? childIndent + keyStr + ': ' : keyStr + ':';\n        str += stringifyValue(value, childIndent);\n      }\n    });\n    str += resolvedSpace ? '\\n' + indent + '}' : '}';\n    return str;\n  }\n\n  /**\n   * Test whether to include a property in a stringified object or not.\n   */\n  function includeProperty(key, value) {\n    return typeof value !== 'undefined' && typeof value !== 'function' && _typeof(value) !== 'symbol';\n  }\n}\n\n/**\n * Resolve a JSON stringify space:\n * replace a number with a string containing that number of spaces\n */\nfunction resolveSpace(space) {\n  if (typeof space === 'number') {\n    return ' '.repeat(space);\n  }\n  if (typeof space === 'string' && space !== '') {\n    return space;\n  }\n  return undefined;\n}\n//# sourceMappingURL=stringify.js.map","/**\n * Revive a string containing an ISO 8601 date string into a JavaScript `Date` object\n */\nexport function reviveDate(key, value) {\n  return typeof value === 'string' && isoDateRegex.test(value) ? new Date(value) : value;\n}\n\n// Matches strings like \"2022-08-25T09:39:19.288Z\"\nvar isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n//# sourceMappingURL=reviveDate.js.map"],"names":["g","f","exports","module","define","amd","globalThis","self","LosslessJSON","this","isInteger","value","INTEGER_REGEX","test","isNumber","NUMBER_REGEX","isSafeNumber","config","num","parseFloat","str","String","v","extractSignificantDigits","s","approx","length","startsWith","substring","UnsafeNumberReason","getUnsafeNumberReason","truncate_integer","isFinite","underflow","truncate_float","overflow","replace","EXPONENTIAL_PART_REGEX","DOT_REGEX","TRAILING_ZEROS_REGEX","LEADING_MINUS_AND_ZEROS_REGEX","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","arg","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","_toPrimitive","LosslessNumber","instance","Constructor","_classCallCheck","_defineProperty","Error","protoProps","staticProps","unsafeReason","BigInt","concat","isLosslessNumber","parseLosslessNumber","revive","json","reviver","reviveValue","context","Array","isArray","array","reviveArray","object","keys","forEach","reviveObject","_toConsumableArray","arr","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","toString","slice","name","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","isWhitespace","code","codeSpace","codeNewline","codeTab","codeReturn","isHex","codeZero","codeNine","codeUppercaseA","codeUppercaseF","codeLowercaseA","codeLowercaseF","isDigit","isNonZeroDigit","codeOne","isValidStringCharacter","isDeepEqual","a","b","every","item","index","isObject","Set","escapeCharacters","r","t","codeBackslash","codeOpeningBrace","codeClosingBrace","codeOpeningBracket","codeClosingBracket","codeDoubleQuote","codePlus","codeMinus","codeComma","codeDot","codeColon","codeUppercaseE","codeLowercaseE","isoDateRegex","options","parse","text","parseNumber","arguments","parseValue","expectValue","expectEndOfInput","parseObject","charCodeAt","skipWhitespace","initial","eatComma","start","parseString","throwObjectKeyExpected","eatColon","_value","throwObjectValueExpected","hasOwnProperty","throwDuplicateKey","throwObjectKeyOrEndExpected","parseArray","_value2","expectArrayItem","push","throwArrayItemOrEndExpected","_ref","_ref2","_ref3","_ref4","_ref5","_parseString","parseNumeric","parseKeyword","result","char","escapeChar","fromCharCode","parseInt","throwInvalidUnicodeCharacter","throwInvalidEscapeCharacter","throwInvalidCharacter","expectEndOfString","expectDigit","SyntaxError","gotAt","numSoFar","pos","chars","end","got","parseNumberAndBigInt","reviveDate","Date","stringify","replacer","space","numberStringifiers","resolvedSpace","repeat","resolveSpace","stringifyValue","indent","stringifier","find","Boolean","JSON","childIndent","stringifyArray","toJSON","map","first","includeProperty","keyStr","stringifyObject","toLosslessNumber","isNaN","toSafeNumberOrThrow","number","unsafeReasonText"],"mappings":"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"}