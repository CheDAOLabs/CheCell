import type { Abi, AccountInterface, Call, DeclareContractPayload, DeclareContractResponse, DeployContractResponse, InvocationsDetails, InvokeFunctionResponse, ProviderInterface, SignerInterface } from "starknet";
import { Account } from "starknet";
import type { IStarknetRpc } from "./starknet.model";
export declare class StarknetRemoteAccount extends Account implements AccountInterface {
    private wallet;
    constructor(provider: ProviderInterface, address: string, signer: SignerInterface, wallet: IStarknetRpc);
    execute(calls: Call | Call[], abis?: Abi[] | undefined, invocationDetails?: InvocationsDetails): Promise<InvokeFunctionResponse>;
    declare(_contractPayload: DeclareContractPayload, _transactionsDetail?: InvocationsDetails | undefined): Promise<DeclareContractResponse>;
    deployAccount(_contractPayload: any, _transactionsDetail?: InvocationsDetails | undefined): Promise<DeployContractResponse>;
}
