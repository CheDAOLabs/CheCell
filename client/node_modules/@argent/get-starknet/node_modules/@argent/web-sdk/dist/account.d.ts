import type { StarknetMethods } from "@argent/x-window";
import type { CreateTRPCProxyClient } from "@trpc/client";
import type { Signature } from "starknet";
import { Account, AccountInterface, ProviderInterface, SignerInterface } from "starknet";
import type { AppRouter } from "./trpc";
declare class UnimplementedSigner implements SignerInterface {
    getPubKey(): Promise<string>;
    signMessage(): Promise<Signature>;
    signTransaction(): Promise<Signature>;
    signDeclareTransaction(): Promise<Signature>;
    signDeployAccountTransaction(): Promise<Signature>;
}
export declare class MessageAccount extends Account implements AccountInterface {
    address: string;
    private readonly proxyLink;
    signer: UnimplementedSigner;
    constructor(provider: ProviderInterface, address: string, proxyLink: CreateTRPCProxyClient<AppRouter>);
    execute: StarknetMethods["execute"];
    signMessage: StarknetMethods["signMessage"];
}
export {};
