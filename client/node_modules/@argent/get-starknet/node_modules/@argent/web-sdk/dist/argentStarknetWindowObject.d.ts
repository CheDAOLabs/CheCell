import type { CreateTRPCProxyClient } from "@trpc/client";
import type { StarknetWindowObject } from "get-starknet-core";
import type { WalletEvents } from "get-starknet-core";
import type { ProviderInterface } from "starknet";
import type { AppRouter } from "./trpc";
export declare const userEventHandlers: WalletEvents[];
export type Variant = "argentX" | "argentWebWallet";
export interface GetArgentStarknetWindowObject {
    id: Variant;
    icon: string;
    name: string;
    version: string;
    host: string;
}
export type WebWalletStarknetWindowObject = StarknetWindowObject & {
    getLoginStatus(): Promise<{
        isLoggedIn: false;
    } | {
        isLoggedIn: true;
        hasSession: boolean;
        isPreauthorized: boolean;
    }>;
};
export declare const getArgentStarknetWindowObject: (options: GetArgentStarknetWindowObject, provider: ProviderInterface, proxyLink: CreateTRPCProxyClient<AppRouter>) => WebWalletStarknetWindowObject;
