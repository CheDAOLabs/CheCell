/**
 * Type enum is used to specify value types in {@link ComponentSchema} to be able
 * to access type values in JavaScript in addition to TypeScript type checks.
 */
export declare enum Type {
    Boolean = 0,
    Number = 1,
    OptionalNumber = 2,
    BigInt = 3,
    OptionalBigInt = 4,
    String = 5,
    OptionalString = 6,
    NumberArray = 7,
    OptionalNumberArray = 8,
    BigIntArray = 9,
    OptionalBigIntArray = 10,
    StringArray = 11,
    OptionalStringArray = 12,
    Entity = 13,
    OptionalEntity = 14,
    EntityArray = 15,
    OptionalEntityArray = 16,
    T = 17,
    OptionalT = 18
}
/**
 * Used to specify type of {@link ComponentUpdate}.
 * - Enter: Update added a value to an entity that did not have a value before
 * - Exit: Update removed a value from an entity that had a value before
 * - Update: Update changed a value of an entity that already had a value before. Note: the value doesn't need to be different from the previous value.
 * - Noop: Update did nothing (removed a value from an entity that did not have a value)
 */
export declare enum UpdateType {
    Enter = 0,
    Exit = 1,
    Update = 2,
    Noop = 3
}
/**
 * Helper constant with all optional {@link Type}s.
 */
export declare const OptionalTypes: Type[];
