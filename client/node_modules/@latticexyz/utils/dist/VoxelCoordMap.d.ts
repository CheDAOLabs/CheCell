import { VoxelCoord } from "./types";
export declare class VoxelCoordMap<T> {
    map: Map<string, T>;
    defaultValue?: T;
    constructor(props?: {
        defaultValue?: T;
    });
    static from<T>(coordMapLike: {
        map: Map<string, T>;
        defaultValue?: T;
    }): VoxelCoordMap<T>;
    set(coord: VoxelCoord, value: T): Map<string, T>;
    get(coord: VoxelCoord): T | undefined;
    keys(): IterableIterator<string>;
    coords(): IterableIterator<VoxelCoord>;
    entries(): IterableIterator<[string, T]>;
    toArray(): [VoxelCoord, T][];
    values(): IterableIterator<T>;
    delete(coord: VoxelCoord): boolean;
    has(coord: VoxelCoord): boolean;
    clear(): void;
    get size(): number;
}
